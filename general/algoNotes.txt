1)
Bracket pair identification:
   LeftBracketposition = stacklenth-2
   RightBracketposition = stacklenth-1
----------------------------------------
2) Rotate an array at kth position (e.g.2):
   [1,2,3,4,5]
   - reverse the array -[5,4,3,2,1]
   split the array into two parts at kth position
   - part1=[5,4] and part2=[3,2,1]
   reverse part1 and part2 and merge them.
   [4,5,1,2,3]
   --------------------------------------
3) Javascript search methods:
   - indexOf() returns the index of the first occurrence of a value in an array.
   - lastIndexOf()
   - includes() returns true or false
   - startsWith()
   - endsWith()
   -find()
   --------------------------------------

4) Use Javascript objects(map) to store unordered data and for quick key-value access.
   - use linked list implementation to queue data than array implementation.
   linked list Enqueue & Dequeue is O(1).
   Array Enqueue & Dequeue is O(n).
   --------------------------------------
5) Binary search Tree:
  reference : Youtube video - noobcoder.
  - Every left child will be smaller than its parent.
  - Every right child will be greater than its parent.
  -Every node will have at most two children.
   -Every node will have a parent.

   deleting a node:
   with no children:
   - delete the node and set its parent's child to null.
   with 1 children:
   - delete the node and set the child as its parent's child.
   a > b > c -removing b will be result in a > c.
   with 2 children:
   - two ways to replace the deleted node 
   - 1. find the smallest node in the right subtree and replace it with the deleted node.
   - 2. find the largest node in the left subtree and replace it with the deleted node.
   - then remove the dupicate node.
   --------------------------------------

